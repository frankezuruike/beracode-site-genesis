name: Deploy Lovable Frontend to OCI Prod

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1 # Use the action to set up Bun
        with:
          bun-version: latest # Or specify a precise version like '1.x.x'

      - name: Navigate to Project Root and Install Dependencies
        run: |
          cd beracode-site-genesis # Navigate into your project's actual root directory
          bun install # Install dependencies using Bun
        # This step runs from the root of the checked-out repository,
        # so `cd beracode-site-genesis` gets into the correct folder.

      - name: Build Frontend
        run: |
          cd beracode-site-genesis # Navigate into your project's actual root directory again
          bun run build # Run the build command using Bun
        # This will create the 'dist' folder inside 'beracode-site-genesis'

      - name: Clean and Prepare Target Directory on Server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Ensure the target directory for your website exists and is empty
            sudo rm -rf /var/www/html/beracode # Remove existing files and directory
            sudo mkdir -p /var/www/html/beracode # Recreate the directory and parents if needed
            # Set ownership. If your Nginx worker process runs as 'www-data', this is good.
            # Otherwise, use the user Nginx runs as (e.g., 'nginx' on some systems)
            sudo chown -R ${{ secrets.VPS_USER }}:www-data /var/www/html/beracode
            sudo chmod -R 755 /var/www/html/beracode # Ensure correct permissions for web server

      - name: Synchronize Build Files To Server
        uses: easingthemes/ssh-deploy@v5.1.0
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          # The SOURCE path is now relative to the GitHub Actions workspace root,
          # and points to the 'dist' folder created inside 'beracode-site-genesis'
          SOURCE: "beracode-site-genesis/dist/"
          REMOTE_HOST: ${{ secrets.VPS_HOST }}
          REMOTE_USER: ${{ secrets.VPS_USER }}
          TARGET: "/var/www/html/beracode" # Your Nginx root directory
          EXCLUDE: | # Exclude patterns are relative to the SOURCE, or just general ignores
            .git/
            node_modules/
            dist/ # The dist folder content is the source, not dist itself. This exclude prevents accidental nested dist copying.

      - name: Reload Nginx on Server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo systemctl reload nginx # Use systemctl for Nginx reload
            # Or if you have issues with systemctl: sudo nginx -s reload
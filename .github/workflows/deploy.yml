name: Deploy Lovable Frontend to OCI Prod

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install Dependencies
        run: |
          bun install

      - name: Build Frontend
        run: |
          bun run build

      # --- CRUCIAL MODIFICATION: Prepare Target Directory on Server for opc user ---
      # This step ensures the directory exists and is writable by the 'opc' user for rsync
      - name: Prepare Target Directory for Rsync
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: opc
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Ensure the parent directories exist
            sudo mkdir -p /var/www/html/beracode
            
            # Set ownership of the target directory to 'opc' (your SSH user)
            # This allows rsync (running as 'opc') to write files
            sudo chown -R opc:opc /var/www/html/beracode
            
            # Ensure 'opc' has full permissions, and others can read/execute
            sudo chmod -R 755 /var/www/html/beracode

      # --- Synchronize Build Files To Server (no change needed here, it relies on previous step) ---
      - name: Synchronize Build Files To Server
        uses: easingthemes/ssh-deploy@v5.1.0
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SOURCE: "dist/"
          REMOTE_HOST: ${{ secrets.VPS_HOST }}
          REMOTE_USER: opc
          TARGET: "/var/www/html/beracode/" # Trailing slash is important
          EXCLUDE: ".git/"
          ARGS: "-avz --delete" # These args are good

      # --- IMPORTANT NEW STEP: Set Final Nginx Permissions and Reload/Restart ---
      # This step runs *after* rsync has completed, setting the final permissions for Nginx
      - name: Set Final Nginx Permissions and Reload Nginx
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: opc
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Determine Nginx user (common on Oracle Linux/CentOS is 'nginx')
            NGINX_USER=$(grep -Po '^\s*user\s+\K[^;]+' /etc/nginx/nginx.conf | head -1 || echo 'nginx')
            
            # Set ownership of all files and directories to the Nginx user
            sudo chown -R $NGINX_USER:$NGINX_USER /var/www/html/beracode
            
            # Set file permissions (read-only for Nginx)
            sudo find /var/www/html/beracode -type f -exec chmod 644 {} \;
            
            # Set directory permissions (read and execute for Nginx to traverse)
            sudo find /var/www/html/beracode -type d -exec chmod 755 {} \;
            
            # Test Nginx configuration
            sudo nginx -t
            
            # If test is successful, reload Nginx (or restart if you prefer a full restart)
            if [ $? -eq 0 ]; then
                echo "Nginx configuration test successful. Reloading Nginx..."
                sudo systemctl reload nginx
                # If 'reload' isn't enough for some reason, use 'restart':
                # sudo systemctl restart nginx
            else
                echo "Nginx configuration test failed. Check logs for errors."
                exit 1 # Fail the workflow if Nginx test fails
            fi

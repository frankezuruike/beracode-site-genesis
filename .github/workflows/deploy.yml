name: Deploy Lovable Frontend to OCI Prod

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest # Or specify a precise version like '1.x.x'

      - name: Install Dependencies
        run: |
          bun install

      - name: Build Frontend
        run: |
          bun run build

      - name: Clean and Prepare Target Directory on Server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo rm -rf /var/www/html/beracode
            sudo mkdir -p /var/www/html/beracode
            sudo chown -R ${{ secrets.VPS_USER }}:www-data /var/www/html/beracode
            sudo chmod -R 755 /var/www/html/beracode

      - name: Synchronize Build Files To Server
        uses: easingthemes/ssh-deploy@v5.1.0
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SOURCE: "dist/" # Source is the built 'dist' folder
          REMOTE_HOST: ${{ secrets.VPS_HOST }}
          REMOTE_USER: ${{ secrets.VPS_USER }}
          TARGET: "/var/www/html/beracode" # Your Nginx root directory
          # Remove or simplify EXCLUDE.
          # If your 'dist' folder truly only contains the final build assets,
          # you often don't need extensive excludes.
          # We'll remove the problematic ones.
          EXCLUDE: ".git/" # Keep .git/ if there's any chance it's in source

      - name: Reload Nginx on Server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo systemctl reload nginx